plugins {
    id 'java'
    id 'war'
    id 'java-library'
    id 'idea'
    id 'application'
}

group 'WebServiceGradle'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    //for annotation
    compile('org.projectlombok:lombok:1.16.6')// https://mvnrepository.com/artifact/javax.inject/javax.inject
    // https://mvnrepository.com/artifact/javax.inject/javax.inject
    compile group: 'javax.inject', name: 'javax.inject', version: '1'

    //logging
    // https://mvnrepository.com/artifact/javax.servlet/servlet-api
    providedCompile group: 'javax.servlet', name: 'servlet-api', version: '2.5'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.13.0'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.13.0'
    compile 'log4j:log4j:1.2.17'
    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    providedCompile group: 'org.projectlombok', name: 'lombok', version: '0.10.1'
    // https://mvnrepository.com/artifact/org.springframework/spring-context
    compile group: 'org.springframework', name: 'spring-context', version: '4.1.3.RELEASE'
    // https://mvnrepository.com/artifact/mysql/mysql-connector-java
    compile group: 'mysql', name: 'mysql-connector-java', version: '5.1.39'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-core
    compile group: 'org.hibernate', name: 'hibernate-core', version: '5.2.1.Final'
    // https://mvnrepository.com/artifact/org.hibernate/hibernate-entitymanager
    compile group: 'org.hibernate', name: 'hibernate-entitymanager', version: '5.4.9.Final'
}

idea {
    project {
        ipr {
            withXml { provider ->
                def projectXml = provider.asNode()
                def compilerConfiguration = projectXml.component.find { component ->
                    component.'@name' == 'CompilerConfiguration'
                }
                def currentAnnotationProcessing = compilerConfiguration.annotationProcessing
                currentAnnotationProcessing.replaceNode {
                    annotationProcessing {
                        profile(name: 'Default', default: true, enabled: true) {
                            processorPath(useClasspath: true)
                        }
                    }
                }
            }
        }
    }
}
